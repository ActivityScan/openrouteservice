#image: docker:latest
image: maven:3-jdk-8

variables:
  DOCKER_DRIVER: overlay
  # This will supress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd`are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_REF_NAME"'
cache:
  paths:
    - .m2/repository

stages:
  - gh-install
  - ors-install
  - ors-api-test
  - ors-deploy-chia

maven-gh-install: 
  stage: gh-install
  only: 
    - development
  script: 
    - mvn -f ./graphhopper/pom.xml install -B

maven-ors-install:
  stage: ors-install
  only:
    - development
  script: 
    - mvn -f ./openrouteservice/pom.xml install -B
  artifacts:
    paths:
      - ./openrouteservice/target/*.war

maven-ors-api-test:
  stage: ors-api-test
  only:
    - development  
  before_script:
    - cp ./openrouteservice-api-tests/conf/app.config.test ./openrouteservice/WebContent/WEB-INF/app.config
    - mvn -f ./openrouteservice/pom.xml install -B
    - nohup mvn -f ./openrouteservice/pom.xml tomcat7:run &
    - sleep 5m    
  script:
    - mvn -f ./openrouteservice-api-tests/pom.xml test

ors-deploy-chia:
  stage: ors-deploy-chia
  only:
    - development
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - ssh-add <(echo "$STAGING_PRIVATE_KEY")
    - ssh -p22 ubuntu@129.206.7.188 "curl 'https://gitlab.gistools.geog.uni-heidelberg.de/giscience/openrouteservice/core-deployment/raw/master/bootstrap.sh?private_token=$ORS_CI_DEPLOY_TOKEN' | bash -s $ORS_DEPLOY_USER $ORS_DEPLOY_USER_PWD /home/ubuntu/webfrastructure/tomcat/data/ development development 8g"
