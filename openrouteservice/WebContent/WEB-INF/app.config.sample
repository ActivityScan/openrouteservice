{
	ors {
	    # The topmost element for parameterization of ORS end-points such as Routing, Geocoding, Isochrones, etc.
		services: {
		        # ********************************************************************************************************************
            		# An end-point used to shorten links. 
			# ********************************************************************************************************************
			shortenlink: {
			        # Enables or disables (true/false) the end-point. Default value is true.
				enabled: true,
				user_name: YOUR_USER,
				user_password: YOUR_PASSWORD,
				api_key: YOUR_API_KEY,
			}
			# ********************************************************************************************************************
			# Accessibility API end-point parameters
			# NOTE: not ready for production yet.
			# ********************************************************************************************************************
			accessibility: {
			        # Enables or disables (true/false) the end-point. Default value is true.
	        	        enabled: true,
	        	        maximum_range_distance: 120000,
	        	        maximum_range_time: 3600,
	        	        maximum_locations: 2,
	        	        route_details_allowed: true,
	        	        attribution: "openrouteservice.org, OpenStreetMap contributors"
	    	        }
			# ********************************************************************************************************************
			# Matrix API end-point parameters			
			# ********************************************************************************************************************
        	        matrix: {
			        # Enables or disables (true/false) the end-point. Default value is true.
        	                enabled: true,
				# Maximum dimension of the result matrix. In other words, the maximum possible length of a row or a column in the matrix.
				# Default value is 100.
                                maximum_locations: 100,
				# Maximum allowed distance between the requested coordinate and a point on the nearest road. The value is measured in meters.
                                maximum_search_radius: 5000,
				# Maximum allowed number of visited nodes in shortest path computation. This threshold is applied only for Dijkstra algorithm. 
                                maximum_visited_nodes: 100000,
				# Specifies whether the name of a neares street to the location can be resolved or not. Default value is true.
                                allow_resolve_locations: true,
                                attribution: "openrouteservice.org, OpenStreetMap contributors"
                        }
			# Optimization API end-point parameters
			# NOTE: not ready for production yet.
                        optimization: {
			        # Enables or disables (true/false) the end-point. Default value is true.
                                enabled: true,
                                maximum_locations: 200,
                                solver_name: "default",
                                solver_options: 
                                { 
                                },
                                attribution: "openrouteservice.org, OpenStreetMap contributors"
                        }
			# MapMatching API end-point parameters
			# NOTE: not implemented yet.
                        mapmatching: {
			    # Enables or disables (true/false) the end-point. Default value is true.
        	    enabled: true,
                maximum_locations: 100,
                maximum_search_radius: 200,
                maximum_visited_nodes: 10000,
                attribution: "openrouteservice.org, OpenStreetMap contributors"
            }
			# Isochrones API end-point parameters
			isochrones: {
			    # Enables or disables (true/false) the end-point.
				# Possible values for maximum_range_distance and maximum_range_time are an integer or a list of values specifically defined for each profile.
				maximum_range_distance: 
				[ 
				   { profiles: "any", value: 50000 }
				   { profiles: "driving-car, driving-hgv", value: 100000 }
				],
				maximum_range_time: 
				[ 
				   { profiles: "any", value: 18000 }
				   { profiles: "driving-car, driving-hgv", value: 3600 }
				],
				maximum_intervals: 10,
				maximum_locations: 2,
				allow_compute_area: true,
				attribution: "openrouteservice.org, OpenStreetMap contributors"
			}
			# Geocoding API end-point parameters
			geocoding: {
				# Enables or disables (true/false) the end-point. Default value is true.
            	geocoder_name: pelias,
                geocoding_url: "http://YOUR_ADDRESS/v1/search",
                reverse_geocoding_url: "http://YOUR_ADDRESS/v1/reverse",
                response_limit: 20,
                user_agent: OpenRouteService,
                attribution: "openrouteservice.org, OpenStreetMap contributors"
            }
			# Locations API end-point parameters
			locations: {
				# Enables or disables (true/false) the end-point. Default value is true.
				enabled: true,
				provider_name: postgresql,
				provider_parameters: {
					host: "YOUR_HOST",
					port: 5432,
					db_name: "YOUR_DATABASE",
					user: "YOUR_USER", 
					password : "YOUR_PASSWORD", 
					table_name : "YOUR_TABLE"
				},
				response_limit: 1000,
				maximum_categories: 5,
				# maximum allowed length of a linestring, measured in meters
				maximum_feature_length: 10000000,
				# maximum allowed area of a polygon, measured in square meters
				maximum_feature_area: -1, 
				# maximum allowed search radius 
				maximum_search_radius_for_points: 50000,
				maximum_search_radius_for_linestrings: 2000,
				maximum_search_radius_for_polygons: 1000,
				attribution: "openrouteservice.org, OpenStreetMap contributors"
			}
			# Routing API end-point parameters
			routing: {
				# Enables or disables (true/false) the end-point. Default value is true.
				enabled: true,
				mode: "normal",
				sources: ["openrouteservice/src/main/files/heidelberg.osm.gz"],
				init_threads: 2,
				attribution: "openrouteservice.org, OpenStreetMap contributors",
				profiles: {
					active: ["vehicles", "bike", "bike2", "pedestrian"],
					default_params: {
						encoder_flags_size: 8, 
						graphs_root_path: "graphs", 
						elevation_provider: cgiar,
						elevation_cache_path: "cgiar_provider",
 	          		    instructions: true,
 	          		    maximum_distance: 100000,
 	          		    maximum_segment_distance_with_dynamic_weights: 50000,
 	          		    maximum_waypoints: 50,
 	          		    
 	          		    preparation:
							{  
							    min_network_size: 200,
                            	min_one_way_network_size: 200,
							
						    	methods:
								{
									lm:
									{
										enabled: true,
										threads: 1,
										weightings: "fastest|shortest",
										landmarks: 16
									}
								}
							}
							execution:
							{
						    	methods:
								{
									lm:
									{
										disabling_allowed: true,
										active_landmarks: 8
									}
								}
							}
					},
					profile-vehicles: {
						profiles: "driving-car,driving-hgv,driving-motorcycle",
						parameters: {
						    encoder_flags_size: 8,
						    encoder_options : "turn_costs=true|block_fords=false,turn_costs=true|block_fords=false,turn_costs=true|block_fords=false",
                            maximum_distance: 100000,
                            elevation: true, 
                            # parameters for the pre-processing stage
                            preparation:
							{  
							    min_network_size: 200,
                            	min_one_way_network_size: 200,
							
						    	methods:
								{
									ch:
									{
										enabled: true,
										threads: 1,
										weightings: "fastest"
									},
									lm:
									{
										enabled: true,
										threads: 1,
										weightings: "fastest|shortest",
										landmarks: 16
									}
								}
							}
							# parameters for pre-processing the execution stage
							execution:
							{
						    	methods:
								{
								    # Contraction hierachies
									ch:
									{
										disabling_allowed: true
									},
									# Landmarks
									lm:
									{
										disabling_allowed: true,
										active_landmarks: 8
									}
								}
							}
						    ext_storages: {
                                WayCategory: { },								
                                HeavyVehicle: {
									restrictions: true
                                },								
								WaySurfaceType: { }
						    }
							# Traffic feature is not ready for production.
						    traffic: false
					    }
					}
					profile-bike: {
						profiles: "cycling-regular, cycling-mountain, cycling-road",
						parameters: {
						    # extent: [5.866240, 15.042050, 47.270210, 55.058140], #
         					encoder_options :"consider_elevation=true|turn_costs=true|block_fords=false,consider_elevation=true|turn_costs=true|block_fords=false,consider_elevation=true|turn_costs=true|block_fords=false", 
  				            elevation: true, 
						    ext_storages: {
                                WayCategory: {  },								
								WaySurfaceType: { },
								HillIndex: { },
								TrailDifficulty: { }
						    }
						}
					}
					profile-bike2: {
						profiles: "cycling-safe,cycling-tour, cycling-electric",
						parameters: {
         					encoder_options: "consider_elevation=true|turn_costs=true|block_fords=false,consider_elevation=true|turn_costs=true|block_fords=false,consider_elevation=true|turn_costs=true|block_fords=false", 
					        elevation: true, 
					 	    ext_storages: {
                                WayCategory: { },								
								WaySurfaceType: { },
								HillIndex: { },
								TrailDifficulty: { }
						    }
						}
					}
					profile-pedestrian: {
						profiles: "foot-walking,foot-hiking",
						parameters: {
						    encoder_options: "block_fords=false,block_fords=false",
						    elevation: true, 
                            ext_storages: {
                                #GreenIndex: {
                                #    filepath: "PATH/TO/THE_GREEN_INDEX_CSV_FILE"
                                #},
                                #NoiseIndex: {
                                #	 filepath: "PATH/TO/THE_NOISE_INDEX_CSV_FILE"
                                #},
                                WayCategory: { },								
								WaySurfaceType: { },
								HillIndex: { },
								TrailDifficulty: { }
						    } 						
						}
					}
				}
				update: {
					enabled: false,
					time: "5, 10:10:00, 100000",
					source: "URL/TO/**.osm.pbf",
					extent: "",
					working_directory: "./update_graphs"
				}
				traffic: {
					enabled: false,
					source: "type=ftp;server=YOUR_SERVER;user=cacc016;password=4)Zn3450;file=viznrw.xml",
					location_codes_path: "PATH/TO/TMC_LCL_LIST",
					update_interval: 300000,
					output_directory: "Temp"
				}
			}
		}
		logging: {
			enabled: true,
			level_file: "DEBUG_LOGGING.properties",
			location: "./logs",
			stdout: true
		}
	}
}
