{
	ors {
		services: {
			shortenlink: {
				enabled: true,
				user_name: YOUR_USER,
				user_password: YOUR_PASSWORD,
				api_key: YOUR_API_KEY,
				attribution: "openrouteservice.org, OpenStreetMap contributors"
			}
			isochrones: {
				enabled: true,
				maximum_range_distance: 100000,
				maximum_range_time: 3600,
				maximum_intervals: 10,
				maximum_locations: 2,
				allow_compute_area: true,
				attribution: "openrouteservice.org, OpenStreetMap contributors"
			}
			geocoding: {
            	geocoder_name: pelias,
                geocoding_url: "http://129.206.7.154:3100/v1/search",
                reverse_geocoding_url: "http://129.206.7.154:3100/v1/reverse",
                response_limit: 20,
                user_agent: openrouteservice.org,
                attribution: "openrouteservice.org, OpenStreetMap contributors"
            }
			locations: {
				enabled: true,
				provider_name: postgresql,
				provider_parameters: {
				host: "129.206.7.206",
				port: 5432,
				db_name: "gis",
				user: "admin", 
				password : "gZwe5Nj", 
				table_name : "planet_osm_pois_g"
				},
				response_limit: 1000,
				maximum_categories: 5,
				# maximum allowed length of a linestring, measured in meters
				maximum_feature_length: 10000000,
				# maximum allowed area of a polygon, measured in square meters
				maximum_feature_area: -1, 
				# maximum allowed search radius 
				maximum_search_radius_for_points: 50000,
				maximum_search_radius_for_linestrings: 2000,
				maximum_search_radius_for_polygons: 1000,
				attribution: "openrouteservice.org, OpenStreetMap contributors"
			}
			routing: {
				enabled: true,
				mode: "normal",
				sources: ["/Users/neilmccauley/Workspaces/ORS_core/openrouteservice/src/main/files/heidelberg.osm"],
				init_threads: 2,
				attribution: "openrouteservice.org, OpenStreetMap contributors, tmc - BASt",
				distance_approximation: true,
				profiles: {
					active: ["vehicles", "vehicles-ch", "bike", "bike2", "pedestrian"],
					# graph_path must be explicitly defined in profile settings #
					# if graphs_root_path parameter is not defined in default_params #
					default_params: {
						encoder_flags_size: 8, 
						graphs_root_path: "/PATH/TO/processed_graphs", 
						elevation_provider: cgiar,
						elevation_cache_path: "/PATH/TO/cgiar_provider",
 	          		    instructions: true,
 	          		    # maximum allowed approximated distance of a route, measured in meters
 	          		    maximum_distance: 100000,
 	          		    # maximum allowed approximated distance of a route segment when dynamic weighting is applied, measured in meters
 	          		    maximum_segment_distance_with_dynamic_weights: 50000,
 	          		    maximum_waypoints: 50
					},
					profile-vehicles: {
						profiles: "driving-car,driving-hgv,driving-motorcycle",
						 # graph_path: "CAR",	 #
						parameters: {
						    encoder_flags_size: 8,
						    encoder_options : "turnCosts=true|blockFords=false,turnCosts=true|blockFords=false,turnCosts=true|blockFords=false",
                            maximum_distance: 100000,
                            elevation: true, 
						    ext_storages: {
                                WayCategory: {
                                },								
                                HeavyVehicle: {
								    restrictions: true
                                },								
								WaySurfaceType: {
								}
						    }
						    traffic: false
					    }
					}
					profile-vehicles-ch: {
						profiles: "driving-car,driving-hgv",
						parameters: {
						    encoder_flags_size: 4,
						    encoder_options : "",
                            ch_weighting: fastest,
                            elevation: true, 
							ext_storages: {
                                WayCategory: {
                                },								
								WaySurfaceType: {
								},
								HillIndex: {
								}
						    }
						}
					}
					profile-bike: {
						profiles: "cycling-regular, cycling-mountain, cycling-road",
						parameters: {
						    # extent: [5.866240, 15.042050, 47.270210, 55.058140], #
         					encoder_options :"considerElevation=true|turnCosts=true|blockFords=false,considerElevation=true|turnCosts=true|blockFords=false,considerElevation=true|turnCosts=true|blockFords=false", 
  				            elevation: true, 
						    ext_storages: {
                                WayCategory: {
								  
                                },								
								WaySurfaceType: {
								},
								HillIndex: {
								}
						    }
						}
					}
					profile-bike2: {
						profiles: "cycling-safe,cycling-tour, cycling-electric",
						parameters: {
         					encoder_options: "considerElevation=true|turnCosts=true|blockFords=false,considerElevation=true|turnCosts=true|blockFords=false,considerElevation=true|turnCosts=true|blockFords=false", 
					        elevation: true, 
					 	    ext_storages: {
                                WayCategory: {
                                },								
								WaySurfaceType: {
								},
								HillIndex: {
								}
						    }
						}
					}
					profile-pedestrian: {
						profiles: "foot-walking,foot-hiking",
						parameters: {
						    encoder_options: "blockFords=false,blockFords=false",
						    elevation: true, 
                            ext_storages: {
                                GreenIndex_: {
                                    filepath: "PATH/TO/THE_GREEN_INDEX_CSV_FILE"
                                },
                                WayCategory: {
                                },								
								WaySurfaceType: {
								},
								HillIndex: {
								}
						    } 						
						}
					}
				}
				update: {
					enabled: false,
					time: "5, 10:10:00, 100000",
					source: "PATH/TO/**.osm.pbf",
					extent: "",
					working_directory: "PATH/TO/GH_WORKING_DIR"
				}

				traffic: {
					enabled: false,
					source: "type=ftp;server=viznrwftp.gewi.com;user=cacc016;password=4)Zn3450;file=viznrw.xml",
					location_codes_path: "PATH/TO/TMC_LCL_LIST",
					update_interval: 300000,
					output_directory: "Temp"
				}
			}
		}
		logging: {
			enabled: true,
			level_file: "DEBUG_LOGGING.properties",
			location: "/PATH/TO/LOGS",
			stdout: true
		}
	}
}
